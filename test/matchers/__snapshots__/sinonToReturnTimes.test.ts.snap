// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sinonToReturnTimes .not only accepts a number argument 1`] = `
"expect(received).not.sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  object
Expected has value: {}"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 2`] = `
"expect(received).not.sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  array
Expected has value: []"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 3`] = `
"expect(received).not.sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  boolean
Expected has value: true"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 4`] = `
"expect(received).not.sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  string
Expected has value: \\"a\\""
`;

exports[`sinonToReturnTimes .not only accepts a number argument 5`] = `
"expect(received).not.sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  map
Expected has value: Map {}"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 6`] = `
"expect(received).not.sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  function
Expected has value: [Function anonymous]"
`;

exports[`sinonToReturnTimes .not passes if function called less than expected times 1`] = `
"expect(sinon.spy()).sinonToReturnTimes(expected)

Expected number of returns: 2
Received number of returns: 1"
`;

exports[`sinonToReturnTimes .not passes if function returned more than expected times 1`] = `
"expect(sinon.spy()).sinonToReturnTimes(expected)

Expected number of returns: 2
Received number of returns: 3"
`;

exports[`sinonToReturnTimes calls that return undefined are counted as returns 1`] = `
"expect(sinon.spy()).not.sinonToReturnTimes(expected)

Expected number of returns: not 2"
`;

exports[`sinonToReturnTimes calls that throw are not counted 1`] = `
"expect(sinon.spy()).sinonToReturnTimes(expected)

Expected number of returns: 3
Received number of returns: 2
Received number of calls:   3"
`;

exports[`sinonToReturnTimes includes the custom mock name in the error message 1`] = `
"expect(named-mock).sinonToReturnTimes(expected)

Expected number of returns: 1
Received number of returns: 2"
`;

exports[`sinonToReturnTimes only accepts a number argument 1`] = `
"expect(received).sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  object
Expected has value: {}"
`;

exports[`sinonToReturnTimes only accepts a number argument 2`] = `
"expect(received).sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  array
Expected has value: []"
`;

exports[`sinonToReturnTimes only accepts a number argument 3`] = `
"expect(received).sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  boolean
Expected has value: true"
`;

exports[`sinonToReturnTimes only accepts a number argument 4`] = `
"expect(received).sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  string
Expected has value: \\"a\\""
`;

exports[`sinonToReturnTimes only accepts a number argument 5`] = `
"expect(received).sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  map
Expected has value: Map {}"
`;

exports[`sinonToReturnTimes only accepts a number argument 6`] = `
"expect(received).sinonToReturnTimes(expected)

Matcher error: expected value must be a non-negative integer

Expected has type:  function
Expected has value: [Function anonymous]"
`;

exports[`sinonToReturnTimes passes if function returned equal to expected times 1`] = `
"expect(sinon.spy()).not.sinonToReturnTimes(expected)

Expected number of returns: not 2"
`;
