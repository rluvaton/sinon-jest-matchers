// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sinonToReturnTimes .not only accepts a number argument 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  object
Expected has value: [32m{}[39m"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 2`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  array
Expected has value: [32m[][39m"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 3`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  boolean
Expected has value: [32mtrue[39m"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 4`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  string
Expected has value: [32m\\"a\\"[39m"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 5`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  map
Expected has value: [32mMap {}[39m"
`;

exports[`sinonToReturnTimes .not only accepts a number argument 6`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  function
Expected has value: [32m[Function anonymous][39m"
`;

exports[`sinonToReturnTimes .not passes if function called less than expected times 1`] = `
"[2mexpect.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

Expected number of returns: [32m2[39m
Received number of returns: [31m1[39m"
`;

exports[`sinonToReturnTimes .not passes if function returned more than expected times 1`] = `
"[2mexpect.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

Expected number of returns: [32m2[39m
Received number of returns: [31m3[39m"
`;

exports[`sinonToReturnTimes calls that return undefined are counted as returns 1`] = `
"[2mexpect.[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

Expected number of returns: not [32m2[39m"
`;

exports[`sinonToReturnTimes calls that throw are not counted 1`] = `
"[2mexpect.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

Expected number of returns: [32m3[39m
Received number of returns: [31m2[39m
Received number of calls:   [31m3[39m"
`;

exports[`sinonToReturnTimes includes the custom mock name in the error message 1`] = `
"[2mexpect([22m[31mnamed-mock[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

Expected number of returns: [32m1[39m
Received number of returns: [31m2[39m"
`;

exports[`sinonToReturnTimes only accepts a number argument 1`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  object
Expected has value: [32m{}[39m"
`;

exports[`sinonToReturnTimes only accepts a number argument 2`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  array
Expected has value: [32m[][39m"
`;

exports[`sinonToReturnTimes only accepts a number argument 3`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  boolean
Expected has value: [32mtrue[39m"
`;

exports[`sinonToReturnTimes only accepts a number argument 4`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  string
Expected has value: [32m\\"a\\"[39m"
`;

exports[`sinonToReturnTimes only accepts a number argument 5`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  map
Expected has value: [32mMap {}[39m"
`;

exports[`sinonToReturnTimes only accepts a number argument 6`] = `
"[2mexpect([22m[31mreceived[39m[2m).[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

[1mMatcher error[22m: [32mexpected[39m value must be a non-negative integer

Expected has type:  function
Expected has value: [32m[Function anonymous][39m"
`;

exports[`sinonToReturnTimes passes if function returned equal to expected times 1`] = `
"[2mexpect.[22mnot[2m.[22msinonToReturnTimes[2m([22m[32mexpected[39m[2m)[22m

Expected number of returns: not [32m2[39m"
`;
