// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sinonToReturn .not fails with any argument passed 1`] = `
"expect(received).not.sinonToReturn()

Matcher error: this matcher must not have an expected argument

Expected has type:  number
Expected has value: 555"
`;

exports[`sinonToReturn .not passes when all calls throw 1`] = `
"expect(sinon.spy()).sinonToReturn()

Expected number of returns: >= 1
Received number of returns:    0
Received number of calls:      2"
`;

exports[`sinonToReturn .not passes when not returned 1`] = `
"expect(sinon.spy()).sinonToReturn()

Expected number of returns: >= 1
Received number of returns:    0"
`;

exports[`sinonToReturn .not works only on sinon.spy 1`] = `
"expect(received).not.sinonToReturn()

Matcher error: received value must be a stub or spy function

Received has type:  function
Received has value: [Function fn]"
`;

exports[`sinonToReturn fails with any argument passed 1`] = `
"expect(received).sinonToReturn()

Matcher error: this matcher must not have an expected argument

Expected has type:  number
Expected has value: 555"
`;

exports[`sinonToReturn includes the custom mock name in the error message 1`] = `
"expect(named-mock).not.sinonToReturn()

Expected number of returns: 0
Received number of returns: 1

1: 42"
`;

exports[`sinonToReturn passes when at least one call does not throw 1`] = `
"expect(sinon.spy()).not.sinonToReturn()

Expected number of returns: 0
Received number of returns: 2

1: 42
3: 42

Received number of calls:   3"
`;

exports[`sinonToReturn passes when returned 1`] = `
"expect(sinon.spy()).not.sinonToReturn()

Expected number of returns: 0
Received number of returns: 1

1: 42"
`;

exports[`sinonToReturn passes when undefined is returned 1`] = `
"expect(sinon.spy()).not.sinonToReturn()

Expected number of returns: 0
Received number of returns: 1

1: undefined"
`;
